name: Deploy on Push

on:
  push:
    branches: [main]

env:
  SSM_PARAMETER_NAME: "ec2_host"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Retrieve EC2 Host from SSM Parameter Store
        id: get-ec2-host
        run: |
          EC2_HOST=$(aws ssm get-parameter \
            --name "${{ env.SSM_PARAMETER_NAME }}" \
            --with-decryption \
            --region "${{ secrets.AWS_REGION }}" \
            --query "Parameter.Value" \
            --output text)
          echo "EC2_HOST=$EC2_HOST" >> $GITHUB_ENV

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Pull Latest Code and Restart Streamlit
        env:
          EC2_HOST: ${{ env.EC2_HOST }}
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@$EC2_HOST << 'EOF'
            set -e
            # Ensure the directory is marked safe for git
            git config --global --add safe.directory /home/ubuntu/app

            # Fix file ownership (assumes user is 'ubuntu')
            sudo chown -R ubuntu:ubuntu /home/ubuntu/

            cd /home/ubuntu/app/src
            git pull

            # Restart streamlit
            source ~/finbot/bin/activate
            sudo pkill -f "streamlit run" || true
            sudo nohup streamlit run main.py \
              --server.port 8501 \
              --server.address 0.0.0.0 \
              --server.enableCORS false > streamlit.log 2>&1 &
          EOF


